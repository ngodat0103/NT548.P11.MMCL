AWSTemplateFormatVersion: "2010-09-09"

Description: 'Security Stack.'

Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  PublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Public subnet ID


Resources:
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPC
              - -public-nacl

  InboundAllowAllNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: allow
      Egress: "false"
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: "0"
        To: "65535"

  OutboundAllowAllNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: allow
      Egress: "true"
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: "0"
        To: "65535"

  PublicSubnetNetworkAclAssociation0:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetID
      NetworkAclId: !Ref PublicNetworkAcl

  SecurityGroupPublicInstance:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allowing only ssh incoming and all outgoing traffic.'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: 'icmp'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '0.0.0.0/24'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref AWS::StackName
              - '-SecurityGroup-public-instance'

  SecurityGroupPrivateInstance:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allowing only SSH and ping in from public subnet'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: "10.0.1.0/24"
        - IpProtocol: 'icmp'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '10.0.1.0/24'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref AWS::StackName
              - '-SecurityGroup-private-instance'

Outputs:
  SecurityGroupPublicInstanceId:
    Description: Security Group ID for the public instance
    Value: !Ref SecurityGroupPublicInstance
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-SecurityGroupPublicInstance

  SecurityGroupPrivateInstanceId:
    Description: Security Group ID for the private instance
    Value: !Ref SecurityGroupPrivateInstance
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-SecurityGroupPrivateInstance
