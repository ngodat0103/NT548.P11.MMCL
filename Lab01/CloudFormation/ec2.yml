AWSTemplateFormatVersion: "2010-09-09"

Description: 'Ec2 Stack.'

Metadata:
  License: Apache-2.0

Parameters:
  Name:
    Description: 'Name of the stack'
    Type: 'String'
    MinLength: '1'
    MaxLength: '255'
    Default: 'Lab01-Group7-EC2'
    ConstraintDescription: 'must be a valid stack name.'
  sshPrivateKey:
    Description: 'SSH private key'
    Type: 'String'
    MinLength: '1'
    MaxLength: '4096'
    ConstraintDescription: 'must be a valid private key.'
    NoEcho: 'true'
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - g3.8xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
    Default: t3.small
    ConstraintDescription: must be a valid EC2 instance type.

  AllowSSHIP:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    Default: 0.0.0.0/0
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  VPC:
    Type: AWS::EC2::VPC::Id
  PublicSubnetID:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetID:
    Type: AWS::EC2::Subnet::Id

Resources:
  EC2PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnetID
      SecurityGroupIds:
        - !GetAtt SecurityGroupPublicInstance.GroupId
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      UserData: !Base64
        Fn::Sub: |-
          #!/bin/bash
          echo "${sshPrivateKey}" > /home/ec2-user/.ssh/id_rsa
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource Instance --region ${AWS::Region}
      Tags:
        - Key: Lab01
          Value: 'EC2PublicInstance'
        - Key: Name
          Value: !Join
            - ''
            - - !Ref Name
              - '-public-instance'
  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref EC2PublicInstance
      AllocationId: !GetAtt IPAddress.AllocationId
  EC2PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnetID
      SecurityGroupIds:
        - !GetAtt SecurityGroupPrivateInstance.GroupId
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Lab01
          Value: 'EC2PrivateInstance'
        - Key: Name
          Value: !Join
            - ''
            - - !Ref Name
              - '-private-instance'
  SecurityGroupPublicInstance:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allowing only ssh incoming and all outgoing traffic.'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref AllowSSHIP
        - IpProtocol: 'icmp'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '0.0.0.0/24'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref Name
              - '-SecurityGroup-public-instance'
  SecurityGroupPrivateInstance:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allowing only SSH and ping in from public subnet'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: "10.0.1.0/24"
        - IpProtocol: 'icmp'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '10.0.1.0/24'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref Name
              - '-SecurityGroup-private-instance'