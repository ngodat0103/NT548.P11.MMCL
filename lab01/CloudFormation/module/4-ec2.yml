AWSTemplateFormatVersion: "2010-09-09"

Description: 'Ec2 Stack.'

Metadata:
  License: Apache-2.0
Parameters:
  sshPrivateKey:
    Description: 'The SSH private key to be used for accessing the EC2 instances. This key should be kept secure and not shared.'
    Type: 'String'
    MinLength: '1'
    ConstraintDescription: 'Must be a valid SSH private key in PEM format using base64 encoded.'
    NoEcho: 'true'
  KeyName:
    Description: 'The name of an existing EC2 KeyPair to enable SSH access to the instance. This KeyPair must already exist in the AWS region.'
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: 'Must be the name of an existing EC2 KeyPair.'
  LatestAmiId:
    Description: 'The ID of the latest Amazon Machine Image (AMI) to use for the EC2 instances. This parameter uses the AWS Systems Manager Parameter Store to get the latest AMI ID.'
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  PublicSubnetId:
    Description: 'The ID of the public subnet where the public EC2 instance will be launched. This subnet must already exist within the specified VPC.'
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetId:
    Description: 'The ID of the private subnet where the private EC2 instance will be launched. This subnet must already exist within the specified VPC.'
    Type: AWS::EC2::Subnet::Id
  SecurityGroupPublicInstanceId:
    Description: 'The ID of the security group to be associated with the public EC2 instance. This security group must allow SSH access from the specified IP range.'
    Type: AWS::EC2::SecurityGroup::Id
  SecurityGroupPrivateInstanceId:
    Description: 'The ID of the security group to be associated with the private EC2 instance. This security group must allow necessary access from the public subnet.'
    Type: AWS::EC2::SecurityGroup::Id
  InstanceType:
    Description: 'The type of EC2 instance to launch. This parameter allows selection from a list of valid instance types, such as t2.micro, t3.small, etc.'
    Type: String
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - g3.8xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
    Default: t3.small
    ConstraintDescription: 'Must be a valid EC2 instance type from the allowed values list.'

Resources:
  EC2PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupPublicInstanceId
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      UserData: !Base64
        Fn::Sub: |-
          #!/bin/bash
          base64 -d <<< ${sshPrivateKey} > /home/ec2-user/.ssh/key.pem
          mkdir -p /home/ec2-user/.ssh
          chmod 400 /home/ec2-user/.ssh/key.pem
          chown ec2-user:ec2-user /home/ec2-user/.ssh/key.pem
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource Instance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-PublicInstance
        - Key: Lab01
          Value: 'EC2PublicInstance'
  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref EC2PublicInstance
      AllocationId: !GetAtt IPAddress.AllocationId
  EC2PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupPrivateInstanceId
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-PrivateInstance
        - Key: Lab01
          Value: 'EC2PrivateInstance'